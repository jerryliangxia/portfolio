/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/lp_spiderman_ps5.glb src/components/game/SpiderManPS5.js -r public 
*/

import React, { useRef, useState, useEffect, useMemo } from "react";
import { useFrame } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";

const MOVEMENT_SPEED = 0.08;
const ANIMATION_SPEED = 1.8; // Set this to the desired animation speed

export function SpiderManPS5(...props) {
  const position = useMemo(() => props.position, []);
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "/models/lp_spiderman_ps5.glb"
  );
  const { actions } = useAnimations(animations, group);
  const [animation, setAnimation] = useState("Idle");

  useEffect(() => {
    actions[animation]
      .reset()
      .fadeIn(0.5)
      .play()
      .setDuration(
        animation === "Idle" ? ANIMATION_SPEED * 6 : ANIMATION_SPEED
      );
    return () => actions[animation].fadeOut(0.5);
  }, [animation]);

  useFrame(() => {
    console.log(group);
    // console.log("position:");
    // console.log(props[0].position);
    // console.log("distance (must be > 0.1):");
    console.log(
      "distance",
      group.current.position.distanceTo(props[0].position)
    );
    if (group.current.position.distanceTo(props[0].position) > 0.1) {
      const direction = group.current.position
        .clone()
        .sub(props[0].position)
        .normalize()
        .multiplyScalar(MOVEMENT_SPEED);
      group.current.position.sub(direction);
      group.current.lookAt(props[0].position);
      // setAnimation("Walk");
    } else {
      // setAnimation("Idle");
    }
  });

  return (
    <group ref={group} {...props} position={position} dispose={null}>
      <group name="Scene">
        <group name="Armature" position={[0.003, 0.976, 0]}>
          <primitive object={nodes.hip} />
          <primitive object={nodes.pelvisl} />
          <primitive object={nodes.pelvisr} />
          <group name="Spider-Man">
            <skinnedMesh
              name="Plane002"
              geometry={nodes.Plane002.geometry}
              material={materials.White}
              skeleton={nodes.Plane002.skeleton}
            />
            <skinnedMesh
              name="Plane002_1"
              geometry={nodes.Plane002_1.geometry}
              material={materials.Red}
              skeleton={nodes.Plane002_1.skeleton}
            />
            <skinnedMesh
              name="Plane002_2"
              geometry={nodes.Plane002_2.geometry}
              material={materials.Blue}
              skeleton={nodes.Plane002_2.skeleton}
            />
            <skinnedMesh
              name="Plane002_3"
              geometry={nodes.Plane002_3.geometry}
              material={materials.Black}
              skeleton={nodes.Plane002_3.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

export default SpiderManPS5;

useGLTF.preload("/models/lp_spiderman_ps5.glb");
